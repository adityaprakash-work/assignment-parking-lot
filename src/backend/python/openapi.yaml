openapi: 3.0.0
info:
  title: Parking Lot API
  version: 1.0.0
  description: API for managing parking lot operations including user signup, signin, booking parking slots, and reviews.
servers:
  - url: http://localhost:8080/api
    description: Local server

paths:
  /signup:
    post:
      summary: User Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignup"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignupResponse"
        "500":
          description: Error creating user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /signin:
    post:
      summary: User Signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignin"
      responses:
        "200":
          description: User signed in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SigninResponse"
        "500":
          description: Error signing in user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /review:
    post:
      summary: Add Review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
      responses:
        "200":
          description: Review added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewResponse"
        "500":
          description: Error adding review
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /parkingSlots:
    get:
      summary: Fetch Parking Slots
      responses:
        "200":
          description: Parking slots fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParkingSlotsResponse"
        "500":
          description: Error fetching parking slots
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /booking:
    post:
      summary: Book Parking Slot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
      responses:
        "200":
          description: Parking slot booked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingResponse"
        "500":
          description: Error booking parking slot
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /fetchBookings:
    get:
      summary: Fetch User Bookings
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
          required: true
          description: ID of the user
      responses:
        "200":
          description: Bookings fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingsResponse"
        "500":
          description: Error fetching bookings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /protected:
    get:
      summary: Validate Token
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Token is valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProtectedResponse"
        "403":
          description: No token provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    UserSignup:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    UserSignin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    Review:
      type: object
      properties:
        userId:
          type: integer
        review:
          type: string
      required:
        - userId
        - review

    Booking:
      type: object
      properties:
        parkingId:
          type: integer
        userId:
          type: integer
      required:
        - parkingId
        - userId

    SignupResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: object
          properties:
            text:
              type: string
            userId:
              type: integer
        redirectTo:
          type: string
        token:
          type: string

    SigninResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: object
          properties:
            text:
              type: string
            userId:
              type: integer
        redirectTo:
          type: string
        token:
          type: string

    ReviewResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        redirectTo:
          type: string

    ParkingSlotsResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              occupant:
                type: integer

    BookingResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    BookingsResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              occupant:
                type: integer

    ProtectedResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        user:
          type: object
          properties:
            email:
              type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
